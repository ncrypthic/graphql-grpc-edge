// Code generated by protoc-gen-go. DO NOT EDIT.
// source: graphql/graphql.proto

package graphql

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GraphQLOption struct {
	// Types that are valid to be assigned to Type:
	//	*GraphQLOption_Query
	//	*GraphQLOption_Mutation
	Type                 isGraphQLOption_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GraphQLOption) Reset()         { *m = GraphQLOption{} }
func (m *GraphQLOption) String() string { return proto.CompactTextString(m) }
func (*GraphQLOption) ProtoMessage()    {}
func (*GraphQLOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_graphql_bf0c669ee24265f1, []int{0}
}
func (m *GraphQLOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphQLOption.Unmarshal(m, b)
}
func (m *GraphQLOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphQLOption.Marshal(b, m, deterministic)
}
func (dst *GraphQLOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphQLOption.Merge(dst, src)
}
func (m *GraphQLOption) XXX_Size() int {
	return xxx_messageInfo_GraphQLOption.Size(m)
}
func (m *GraphQLOption) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphQLOption.DiscardUnknown(m)
}

var xxx_messageInfo_GraphQLOption proto.InternalMessageInfo

type isGraphQLOption_Type interface {
	isGraphQLOption_Type()
}

type GraphQLOption_Query struct {
	Query string `protobuf:"bytes,1,opt,name=query,oneof"`
}

type GraphQLOption_Mutation struct {
	Mutation string `protobuf:"bytes,2,opt,name=mutation,oneof"`
}

func (*GraphQLOption_Query) isGraphQLOption_Type() {}

func (*GraphQLOption_Mutation) isGraphQLOption_Type() {}

func (m *GraphQLOption) GetType() isGraphQLOption_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *GraphQLOption) GetQuery() string {
	if x, ok := m.GetType().(*GraphQLOption_Query); ok {
		return x.Query
	}
	return ""
}

func (m *GraphQLOption) GetMutation() string {
	if x, ok := m.GetType().(*GraphQLOption_Mutation); ok {
		return x.Mutation
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GraphQLOption) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GraphQLOption_OneofMarshaler, _GraphQLOption_OneofUnmarshaler, _GraphQLOption_OneofSizer, []interface{}{
		(*GraphQLOption_Query)(nil),
		(*GraphQLOption_Mutation)(nil),
	}
}

func _GraphQLOption_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GraphQLOption)
	// type
	switch x := m.Type.(type) {
	case *GraphQLOption_Query:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Query)
	case *GraphQLOption_Mutation:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Mutation)
	case nil:
	default:
		return fmt.Errorf("GraphQLOption.Type has unexpected type %T", x)
	}
	return nil
}

func _GraphQLOption_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GraphQLOption)
	switch tag {
	case 1: // type.query
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Type = &GraphQLOption_Query{x}
		return true, err
	case 2: // type.mutation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Type = &GraphQLOption_Mutation{x}
		return true, err
	default:
		return false, nil
	}
}

func _GraphQLOption_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GraphQLOption)
	// type
	switch x := m.Type.(type) {
	case *GraphQLOption_Query:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Query)))
		n += len(x.Query)
	case *GraphQLOption_Mutation:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Mutation)))
		n += len(x.Mutation)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

var E_Type = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*GraphQLOption)(nil),
	Field:         50001,
	Name:          "graphql.type",
	Tag:           "bytes,50001,opt,name=type",
	Filename:      "graphql/graphql.proto",
}

func init() {
	proto.RegisterType((*GraphQLOption)(nil), "graphql.GraphQLOption")
	proto.RegisterExtension(E_Type)
}

func init() { proto.RegisterFile("graphql/graphql.proto", fileDescriptor_graphql_bf0c669ee24265f1) }

var fileDescriptor_graphql_bf0c669ee24265f1 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4d, 0x2f, 0x4a, 0x2c,
	0xc8, 0x28, 0xcc, 0xd1, 0x87, 0xd2, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xec, 0x50, 0xae,
	0x94, 0x42, 0x7a, 0x7e, 0x7e, 0x7a, 0x4e, 0xaa, 0x3e, 0x58, 0x38, 0xa9, 0x34, 0x4d, 0x3f, 0x25,
	0xb5, 0x38, 0xb9, 0x28, 0xb3, 0xa0, 0x24, 0xbf, 0x08, 0xa2, 0x54, 0xc9, 0x97, 0x8b, 0xd7, 0x1d,
	0xa4, 0x38, 0xd0, 0xc7, 0xbf, 0xa0, 0x24, 0x33, 0x3f, 0x4f, 0x48, 0x8c, 0x8b, 0xb5, 0xb0, 0x34,
	0xb5, 0xa8, 0x52, 0x82, 0x51, 0x81, 0x51, 0x83, 0xd3, 0x83, 0x21, 0x08, 0xc2, 0x15, 0x92, 0xe1,
	0xe2, 0xc8, 0x2d, 0x2d, 0x49, 0x04, 0xa9, 0x91, 0x60, 0x82, 0x4a, 0xc1, 0x45, 0x9c, 0xd8, 0xb8,
	0x58, 0x4a, 0x2a, 0x0b, 0x52, 0xad, 0x7c, 0x20, 0xb4, 0x90, 0x9c, 0x1e, 0xc4, 0x66, 0x3d, 0x98,
	0xcd, 0x7a, 0xbe, 0xa9, 0x25, 0x19, 0xf9, 0x29, 0x10, 0x4b, 0x8a, 0x25, 0x2e, 0xb6, 0x31, 0x2b,
	0x30, 0x6a, 0x70, 0x1b, 0x89, 0xe9, 0xc1, 0x5c, 0x8e, 0xe2, 0x8a, 0x20, 0xb0, 0x29, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xa0, 0x79, 0xde, 0xcf, 0xdf, 0x00, 0x00, 0x00,
}
