syntax="proto3";

import "graphql-grpc-edge/graphql/graphql.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "common/shared.proto";

package sample;

enum HelloType {
    NONE = 0;
    ANY = 1;
}

message Blank {}

message Error {
    string error_message = 1;
}

message HelloSender {
    enum SenderType {
        PUBLIC = 0;
        FRIEND = 1;
    }
    string name = 1;
    string last_name = 2;
    SenderType type = 3;
}

message Hello {
    enum HelloStatus {
        HelloUnknown = 0;
        HelloStranger = 1;
    }
    message HelloGreeting {
        string name = 1;
    }
    string name = 1;
    HelloType type = 2;
    repeated string messages = 3;
    HelloSender sender = 4;
    google.protobuf.Timestamp created_at = 5;
    HelloStatus status = 6;
    map<string,bool> properties = 7;
}

message ServerError {
    int32 code = 1;
    string decription = 2;
}

message FieldValidationError {
    string field = 1;
    string error = 2;
}

message ValidationError {
    repeated FieldValidationError fields = 1;
}

message HelloResponse {
    Hello data = 1;
    common.shared.Money amount = 2;
    oneof error {
        ServerError exception = 3;
        ValidationError form_error = 4;
    };
}

message HelloRequest {
    message Payload {
        string name = 1;
    }
    string name = 1;
    Payload payload = 2;
}

service HelloService {
    rpc NewHello(Hello) returns (google.protobuf.Empty);
    rpc NewHello2(Hello) returns (Blank);

    rpc Greeting(HelloRequest) returns (HelloResponse) {
        option (graphql.type) = {
            query: "greeting"
        };
    }

    rpc SetGreeting(Hello) returns (HelloResponse) {
        option (graphql.type) = {
            mutation: "setGreeting"
        };
    }

    rpc GetGreeting(Hello) returns (google.protobuf.Empty) {
        option (graphql.type) = {
            mutation: "getGreeting"
        };
    }

    rpc SetDuration(google.protobuf.Duration) returns (google.protobuf.Duration) {
        option (graphql.type) = {
            mutation: "setDuration"
        };
    }

    rpc SetTimestamp(google.protobuf.Timestamp) returns (google.protobuf.Timestamp) {
        option (graphql.type) = {
            mutation: "setTimestamp"
        };
    }

    rpc SetBoolValue(google.protobuf.BoolValue) returns (google.protobuf.BoolValue) {
        option (graphql.type) = {
            mutation: "setBoolValue"
        };
    }

    rpc SetInt32Value(google.protobuf.Int32Value) returns (google.protobuf.Int32Value) {
        option (graphql.type) = {
            mutation: "setInt32Value"
        };
    }

    rpc SetStringValue(google.protobuf.StringValue) returns (google.protobuf.StringValue) {
        option (graphql.type) = {
            mutation: "setStringValue"
        };
    }
}
